
IF os=="windows"
    output.file.name=estruturastestes.exe
ENDIF
IF os!="windows"
    output.file.name=estruturastestes
ENDIF

IF os=="windows"
    $dl_ext=dll
ENDIF
IF os!="windows"
    $dl_ext=so
ENDIF

build.files=lib/libestruturas.$(dl_ext) lib/libtestesunit.$(dl_ext) lib/libutils.$(dl_ext)

src.dir=src
bin.dir=bin/Release
obj.dir=obj/Release

compiler.params=-Wall -fexceptions -O2 -std=c++17
linker.params=-s

lib.dirs=lib
include.dirs=include
libs=estruturas testesunit utils

task link verbose;

proc compilaECopiaLibs
    rm -r lib
    rm -r include

    mkdir lib
    mkdir include

    IF os == "windows"
        @..\cbuild.exe buildall --working-dir=../estruturas
        @..\cbuild.exe buildall --working-dir=../testesunit
        @..\cbuild.exe buildall --working-dir=../utils
    ENDIF
    IF os != "windows"
        @../cbuild buildall --working-dir=../estruturas
        @../cbuild buildall --working-dir=../testesunit
        @../cbuild buildall --working-dir=../utils
    ENDIF

    cp ../estruturas/build/libestruturas.$(dl_ext) lib
    cp ../testesunit/build/libtestesunit.$(dl_ext) lib
    cp ../utils/build/libutils.$(dl_ext) lib

    cp -r ../estruturas/src/**/*.h include
    cp -r ../testesunit/src/**/*.h include
    cp -r ../utils/src/**/*.h include
endproc

task compile before
    call compilaECopiaLibs
endtask

task compileall before
    call compilaECopiaLibs
endtask

task finish after
    shellbegin
        IF os=="windows"
            .\build\estruturastestes.exe
        ENDIF
        IF os!="windows"
            export LD_LIBRARY_PATH=lib:$LD_LIBRARY_PATH
            ./build/estruturastestes
        ENDIF
    endshell
endtask